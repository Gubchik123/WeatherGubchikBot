import re
from emoji import emojize
from constants import TEXT

DESC = ""
LANG = ""


def get_string_by_(regex: str):
    try:
        return re.search(regex, DESC)[0]
    except TypeError:
        return ''


def get_sun_description():
    return get_string_by_(
        regex={
            "uk": r'—è—Å–Ω–æ,.+',
            "ru": r'—è—Å–Ω–æ,.+',
            "en": r'clear,.+'
        }.get(LANG)
    )


def get_sun_behind_cloud_description():
    return get_string_by_(
        regex={
            "uk": r'.+(?:–ø—Ä–æ—è—Å–Ω–µ–Ω–Ω—è–º–∏|—Ö–º–∞—Ä–Ω—ñ—Å—Ç—å), –±–µ–∑.+–æ–ø–∞–¥—ñ–≤',
            "ru": r'.+(?:–ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏|–æ–±–ª–∞—á–Ω–æ—Å—Ç—å), –±–µ–∑.+–æ—Å–∞–¥–∫–æ–≤',
            "en": r'.+(?:times|cloud), no.+precipitation'
        }.get(LANG)
    )


def get_cloud_description():
    return get_string_by_(
        regex={
            "uk": r'(?:–ø–æ—Ö–º—É—Ä–æ|—Ö–º–∞—Ä–Ω–æ), –±–µ–∑.+–æ–ø–∞–¥—ñ–≤',
            "ru": r'(?:–ø–∞—Å–º—É—Ä–Ω–æ|–æ–±–ª–∞—á–Ω–æ), –±–µ–∑.+–æ—Å–∞–¥–∫–æ–≤',
            "en": r'(?:overcast|cloudy), no.+precipitation'
        }.get(LANG)
    )


def get_sun_behind_rain_cloud_description():
    return get_string_by_(
        regex={
            "uk": r'.+(–ø—Ä–æ—è—Å–Ω–µ–Ω–Ω—è–º–∏|—Ö–º–∞—Ä–Ω—ñ—Å—Ç—å),.+–¥–æ—â',
            "ru": r'.+(–ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏|–æ–±–ª–∞—á–Ω–æ—Å—Ç—å),.+–¥–æ–∂–¥—å',
            "en": r'.+(times|cloud),.+rain'
        }.get(LANG)
    )


def get_cloud_with_rain_description():
    return get_string_by_(
        regex={
            "uk": r'(?:–ø–æ—Ö–º—É—Ä–æ|—Ö–º–∞—Ä–Ω–æ),.+–¥–æ—â',
            "ru": r'(?:–ø–∞—Å–º—É—Ä–Ω–æ|–æ–±–ª–∞—á–Ω–æ),.+–¥–æ–∂–¥—å',
            "en": r'(?:overcast|cloudy),.+rain'
        }.get(LANG)
    )


def get_weather_emoji_by_(desc: str):
    """Function for returning weather emoji by description"""
    global DESC, LANG

    desc = desc.lower()
    DESC = desc
    LANG = TEXT().lang_code

    return {
        get_sun_description():
            emojize(":sun:"),  # ‚òÄÔ∏è
        get_sun_behind_cloud_description():
            emojize(":sun_behind_cloud:"),  # ‚õÖÔ∏è
        get_cloud_description():
            emojize(":cloud:"),  # ‚òÅÔ∏è
        get_sun_behind_rain_cloud_description():
            emojize(":sun_behind_rain_cloud:"),  # üå¶
        get_cloud_with_rain_description():
            emojize(":cloud_with_rain:")  # üåß
    }.get(desc, '')


def get_moon_emoji_by_(desc: str):
    return {
        "–ø–æ–≤–Ω—è":
            emojize(":full_moon:"),  # üåï
        "—Å–ø–∞–¥–∞—é—á–∏–π –æ–ø—É–∫–ª–∏–π –º—ñ—Å—è—Ü—å":
            emojize(":waning_gibbous_moon:"),  # üåñ
        "–æ—Å—Ç–∞–Ω–Ω—è —á–≤–µ—Ä—Ç—å":
            emojize(":last_quarter_moon:"),  # üåó
        "—Å–ø–∞–¥–∞—é—á–∏–π –ø—ñ–≤–º—ñ—Å—è—Ü—å":
            emojize(":waning_crescent_moon:"),  # üåò
        "–Ω–æ–≤–∏–π –º—ñ—Å—è—Ü—å":
            emojize(":new_moon:"),  # üåë
        "–∑—Ä–æ—Å—Ç–∞—é—á–∏–π –ø—ñ–≤–º—ñ—Å—è—Ü—å":
            emojize(":waxing_crescent_moon:"),  # üåí
        "–ø–µ—Ä—à–∞ —á–≤–µ—Ä—Ç—å":
            emojize(":first_quarter_moon:"),  # üåì
        "–∑—Ä–æ—Å—Ç–∞—é—á–∏–π –æ–ø—É–∫–ª–∏–π –º—ñ—Å—è—Ü—å":
            emojize(":waxing_gibbous_moon:")  # üåî
    }.get(desc.lower(), '')
